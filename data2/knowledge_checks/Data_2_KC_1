{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Data_2_KC_1","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyP/28hUY6oqGBzZuafjXceM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Knowledge Check 1\n","\n","Welcome to your first knowledge check! There will be two more of these per class to test your knowledge of the course up to this point. In addition, this our first attempt at something like this, so please share feedback with your mentors and Code Louisville staff so we can improve it for next class.\n","\n","This environment is called Google CoLab - it works just like a Jupyter Notebook (which you'll learn more about) but it's hosted by Google so it's a little easier to share with you. However, we still want you to use local Python files so you understand how to get those to GitHub rather than relying on CoLab.\n"],"metadata":{"id":"m1dGhRtjN4hM"}},{"cell_type":"markdown","source":["## First Assignment \n","\n","For this assignment, we're going to work with Pandas to explore a little more of the data manipulation and computation side of things. "],"metadata":{"id":"BJABc9Qxx-pM"}},{"cell_type":"markdown","source":["## Your Instructions:\n","\n","To complete the first knowledge check, do the following: \n","\n","1. Create a GitHub repo called \"data_1_checks\". You will upload ALL knowledge checks to this repo in the future.\n","2. Send that link to your mentor so they can check it when you finish the assignment. \n","3. Make a .py (or .ipynb) file that contains the following (your choice of editor does not matter!) and do the following: \n","- Pull in data from an API. Here's a list of public APIs that don't require Auth keys, though if you have another API you want to use feel free: https://apipheny.io/free-api/\n","- Find and print TWO descriptive statistics about your data. This can be absolutely anything, from the mean() or sum() of a column to the number of different categories, to the number of null values in a column. We just want to see two pieces of information. \n","- Write a query in Pandas to select a particular set of your data. You can use a mask or with .query(), but we want you to pull out a subset based on any parameter you like. This could be \"show me every row where HTTPS=False\" or anything else.\n","- Select and print the SECOND AND THIRD columns of your data frame.\n","- Select and print the FIRST 4 rows of you data frame.\n","4. Commit your changes.\n","5. Push your changes to your repo and notify your mentor!\n","\n","\n","---\n","\n","This project will test your knowledge of pulling in data from an API then doing some quick manipulation and calculation using pandas."],"metadata":{"id":"fYQoYdeqOEK4"}},{"cell_type":"code","execution_count":25,"metadata":{"id":"obEUzMhANs3S","executionInfo":{"status":"ok","timestamp":1650908660507,"user_tz":240,"elapsed":748,"user":{"displayName":"Will T","userId":"16947091469695222242"}}},"outputs":[],"source":["import requests\n","import pandas as pd "]},{"cell_type":"markdown","source":["I will be the first to admit I'm not an expert at working with APIs, so I had to fiddle with this to get it to work. However, most APIs will return a JSON object, so I had to pull the 'entries' field from that then feed that into the DataFrame. Sometimes you can just use pd.read_json() but that didn't work in this case."],"metadata":{"id":"kPdaPBoV3JUo"}},{"cell_type":"code","source":["r = requests.get('https://api.publicapis.org/entries')\n","data = r.json()['entries']\n","df = pd.DataFrame(data=data)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZHRDWYBEy9Nn","executionInfo":{"status":"ok","timestamp":1650908994346,"user_tz":240,"elapsed":1732,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"0d38d7f4-2ea2-48e8-de56-401b6145c289"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         API                                Description    Auth  HTTPS Cors  \\\n","0  AdoptAPet          Resource to help get pets adopted  apiKey   True  yes   \n","1    Axolotl   Collection of axolotl pictures and facts           True   no   \n","2  Cat Facts                            Daily cat facts           True   no   \n","3     Cataas  Cat as a service (cats pictures and gifs)           True   no   \n","4       Cats               Pictures of cats from Tumblr  apiKey   True   no   \n","\n","                                                Link Category  \n","0  https://www.adoptapet.com/public/apis/pet_list...  Animals  \n","1                 https://theaxolotlapi.netlify.app/  Animals  \n","2         https://alexwohlbruck.github.io/cat-facts/  Animals  \n","3                                https://cataas.com/  Animals  \n","4                        https://docs.thecatapi.com/  Animals  "],"text/html":["\n","  <div id=\"df-b69deacf-78a3-46f8-bb5d-a3406080044d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>API</th>\n","      <th>Description</th>\n","      <th>Auth</th>\n","      <th>HTTPS</th>\n","      <th>Cors</th>\n","      <th>Link</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>AdoptAPet</td>\n","      <td>Resource to help get pets adopted</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://www.adoptapet.com/public/apis/pet_list...</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Axolotl</td>\n","      <td>Collection of axolotl pictures and facts</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>no</td>\n","      <td>https://theaxolotlapi.netlify.app/</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cat Facts</td>\n","      <td>Daily cat facts</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>no</td>\n","      <td>https://alexwohlbruck.github.io/cat-facts/</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Cataas</td>\n","      <td>Cat as a service (cats pictures and gifs)</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>no</td>\n","      <td>https://cataas.com/</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Cats</td>\n","      <td>Pictures of cats from Tumblr</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>no</td>\n","      <td>https://docs.thecatapi.com/</td>\n","      <td>Animals</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b69deacf-78a3-46f8-bb5d-a3406080044d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b69deacf-78a3-46f8-bb5d-a3406080044d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b69deacf-78a3-46f8-bb5d-a3406080044d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["The ```df.describe()``` function can be handy to get a quick view at what your dataset looks like. This is text data, but it will calculate basic descriptive statistics if you have numeric data. It looks like the \"top\" API from this dataset is SWAPI, which is the Star Wars API. If you're validating your data for unique values, you might look at the **count** and **unique** values under ```Link``` which appears to tell us that all of the links are unique and appear once."],"metadata":{"id":"QV3eUioh3iVx"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"rBNPI30n2PKO","executionInfo":{"status":"ok","timestamp":1650909384889,"user_tz":240,"elapsed":418,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"d845ff3b-4f73-4d32-d9df-949df5edce07"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          API Description  Auth HTTPS     Cors  \\\n","count    1420        1420  1420  1420     1420   \n","unique   1407        1366     5     2        3   \n","top     SWAPI       Music        True  unknown   \n","freq        2           9   669  1328      911   \n","\n","                                                     Link     Category  \n","count                                                1420         1420  \n","unique                                               1420           51  \n","top     https://www.adoptapet.com/public/apis/pet_list...  Development  \n","freq                                                    1          120  "],"text/html":["\n","  <div id=\"df-2eb98508-af63-4214-a3c1-1c190abb3b38\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>API</th>\n","      <th>Description</th>\n","      <th>Auth</th>\n","      <th>HTTPS</th>\n","      <th>Cors</th>\n","      <th>Link</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1420</td>\n","      <td>1420</td>\n","      <td>1420</td>\n","      <td>1420</td>\n","      <td>1420</td>\n","      <td>1420</td>\n","      <td>1420</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>1407</td>\n","      <td>1366</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1420</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>SWAPI</td>\n","      <td>Music</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://www.adoptapet.com/public/apis/pet_list...</td>\n","      <td>Development</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>669</td>\n","      <td>1328</td>\n","      <td>911</td>\n","      <td>1</td>\n","      <td>120</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2eb98508-af63-4214-a3c1-1c190abb3b38')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2eb98508-af63-4214-a3c1-1c190abb3b38 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2eb98508-af63-4214-a3c1-1c190abb3b38');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["Here, ```df.shape``` tells us the number of rows and the number of columns. We already have two descriptive pieces of data about our data set, see how easy that is? "],"metadata":{"id":"DqiT6aS74YSt"}},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NaV_Azgr3g13","executionInfo":{"status":"ok","timestamp":1650909649648,"user_tz":240,"elapsed":317,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"a1040383-fa96-4bb1-d4c8-479357315e1e"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1420, 7)"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["Here's a basic way to select things from a dataframe. To be honest, this is the only way I can reliably remember how to do this, which is by using what's called a mask. You can read more [here](https://jakevdp.github.io/PythonDataScienceHandbook/02.06-boolean-arrays-and-masks.html) if you want, or you can use ```df.query()```. Below, I just want to see everything in the DataFrame that has the category \"Email\".\n","\n","If you know SQL, this is how you would write the equivalent SQL statement. If not, it will come up later in the course. The SQL syntax is easier to remember for me, but either option works!\n","\n","```\n","SELECT * \n","FROM df \n","WHERE Category = 'Email'\n","```\n","\n","\n","\n"],"metadata":{"id":"_DBIzz3_5GXD"}},{"cell_type":"code","source":["df[df['Category'] == 'Email']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"NYtGO0aA4VQT","executionInfo":{"status":"ok","timestamp":1650909920052,"user_tz":240,"elapsed":259,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"2a737816-fb93-4c86-ae15-6939a54e2ed3"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                           API  \\\n","432  Abstract Email Validation   \n","433      apilayer mailboxlayer   \n","434      Cloudmersive Validate   \n","435                     Disify   \n","436                   DropMail   \n","437                        EVA   \n","438             Guerrilla Mail   \n","439                   ImprovMX   \n","440                    Kickbox   \n","441                    mail.gw   \n","442                    mail.tm   \n","443           MailboxValidator   \n","444               MailCheck.ai   \n","445                   Mailtrap   \n","446                   Sendgrid   \n","447                 Sendinblue   \n","448                   Verifier   \n","\n","                                           Description    Auth  HTTPS  \\\n","432  Validate email addresses for deliverability an...  apiKey   True   \n","433                           Email address validation  apiKey   True   \n","434  Validate email addresses, phone numbers, VAT n...  apiKey   True   \n","435  Validate and detect disposable and temporary e...           True   \n","436  GraphQL API for creating and managing ephemera...           True   \n","437                           Validate email addresses           True   \n","438               Disposable temporary Email addresses           True   \n","439              API for free email forwarding service  apiKey   True   \n","440                             Email verification API           True   \n","441                                     10 Minute Mail           True   \n","442                            Temporary Email Service           True   \n","443   Validate email address to improve deliverability  apiKey   True   \n","444  Prevent users to sign up with temporary email ...           True   \n","445  A service for the safe testing of emails sent ...  apiKey   True   \n","446  A cloud-based SMTP provider that allows you to...  apiKey   True   \n","447  A service that provides solutions relating to ...  apiKey   True   \n","448                Verifies that a given email is real  apiKey   True   \n","\n","        Cors                                               Link Category  \n","432      yes  https://www.abstractapi.com/email-verification...    Email  \n","433  unknown                           https://mailboxlayer.com    Email  \n","434      yes              https://cloudmersive.com/validate-api    Email  \n","435      yes                            https://www.disify.com/    Email  \n","436  unknown                 https://dropmail.me/api/#live-demo    Email  \n","437      yes                          https://eva.pingutil.com/    Email  \n","438  unknown  https://www.guerrillamail.com/GuerrillaMailAPI...    Email  \n","439  unknown                           https://improvmx.com/api    Email  \n","440      yes                          https://open.kickbox.com/    Email  \n","441      yes                               https://docs.mail.gw    Email  \n","442      yes                               https://docs.mail.tm    Email  \n","443  unknown    https://www.mailboxvalidator.com/api-email-free    Email  \n","444  unknown            https://www.mailcheck.ai/#documentation    Email  \n","445  unknown                  https://mailtrap.docs.apiary.io/#    Email  \n","446  unknown           https://docs.sendgrid.com/api-reference/    Email  \n","447  unknown             https://developers.sendinblue.com/docs    Email  \n","448      yes             https://verifier.meetchopra.com/docs#/    Email  "],"text/html":["\n","  <div id=\"df-74732e8a-c89f-467e-98fa-815429ac0f4a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>API</th>\n","      <th>Description</th>\n","      <th>Auth</th>\n","      <th>HTTPS</th>\n","      <th>Cors</th>\n","      <th>Link</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>432</th>\n","      <td>Abstract Email Validation</td>\n","      <td>Validate email addresses for deliverability an...</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://www.abstractapi.com/email-verification...</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>433</th>\n","      <td>apilayer mailboxlayer</td>\n","      <td>Email address validation</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://mailboxlayer.com</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>434</th>\n","      <td>Cloudmersive Validate</td>\n","      <td>Validate email addresses, phone numbers, VAT n...</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://cloudmersive.com/validate-api</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>435</th>\n","      <td>Disify</td>\n","      <td>Validate and detect disposable and temporary e...</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://www.disify.com/</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>436</th>\n","      <td>DropMail</td>\n","      <td>GraphQL API for creating and managing ephemera...</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://dropmail.me/api/#live-demo</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>437</th>\n","      <td>EVA</td>\n","      <td>Validate email addresses</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://eva.pingutil.com/</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>438</th>\n","      <td>Guerrilla Mail</td>\n","      <td>Disposable temporary Email addresses</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://www.guerrillamail.com/GuerrillaMailAPI...</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>439</th>\n","      <td>ImprovMX</td>\n","      <td>API for free email forwarding service</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://improvmx.com/api</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>440</th>\n","      <td>Kickbox</td>\n","      <td>Email verification API</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://open.kickbox.com/</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>441</th>\n","      <td>mail.gw</td>\n","      <td>10 Minute Mail</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://docs.mail.gw</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>442</th>\n","      <td>mail.tm</td>\n","      <td>Temporary Email Service</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://docs.mail.tm</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>443</th>\n","      <td>MailboxValidator</td>\n","      <td>Validate email address to improve deliverability</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://www.mailboxvalidator.com/api-email-free</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>444</th>\n","      <td>MailCheck.ai</td>\n","      <td>Prevent users to sign up with temporary email ...</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://www.mailcheck.ai/#documentation</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>445</th>\n","      <td>Mailtrap</td>\n","      <td>A service for the safe testing of emails sent ...</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://mailtrap.docs.apiary.io/#</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>446</th>\n","      <td>Sendgrid</td>\n","      <td>A cloud-based SMTP provider that allows you to...</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://docs.sendgrid.com/api-reference/</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>447</th>\n","      <td>Sendinblue</td>\n","      <td>A service that provides solutions relating to ...</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>unknown</td>\n","      <td>https://developers.sendinblue.com/docs</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>448</th>\n","      <td>Verifier</td>\n","      <td>Verifies that a given email is real</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://verifier.meetchopra.com/docs#/</td>\n","      <td>Email</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74732e8a-c89f-467e-98fa-815429ac0f4a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-74732e8a-c89f-467e-98fa-815429ac0f4a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-74732e8a-c89f-467e-98fa-815429ac0f4a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","source":["There are more ways to select and subselect data in Pandas than I could write about here. I just want you to attempt to pull a few random columns and a few rows."],"metadata":{"id":"YP1SNNGm-vaM"}},{"cell_type":"code","source":["df[['Description','Auth']].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"OV3H2mVj4-ob","executionInfo":{"status":"ok","timestamp":1650911272465,"user_tz":240,"elapsed":282,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"f506d299-9c08-4838-cc4d-e611f45dc544"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Description    Auth\n","0          Resource to help get pets adopted  apiKey\n","1   Collection of axolotl pictures and facts        \n","2                            Daily cat facts        \n","3  Cat as a service (cats pictures and gifs)        \n","4               Pictures of cats from Tumblr  apiKey"],"text/html":["\n","  <div id=\"df-2cdce5e6-a3cf-4c2b-a09c-bc865535b8cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Description</th>\n","      <th>Auth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Resource to help get pets adopted</td>\n","      <td>apiKey</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Collection of axolotl pictures and facts</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Daily cat facts</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Cat as a service (cats pictures and gifs)</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Pictures of cats from Tumblr</td>\n","      <td>apiKey</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2cdce5e6-a3cf-4c2b-a09c-bc865535b8cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2cdce5e6-a3cf-4c2b-a09c-bc865535b8cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2cdce5e6-a3cf-4c2b-a09c-bc865535b8cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["df.iloc[4:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"0WtRrYoO-mBC","executionInfo":{"status":"ok","timestamp":1650911334592,"user_tz":240,"elapsed":269,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"30958964-58a7-4fca-cc4b-b61b7e412e38"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         API                                        Description    Auth  \\\n","4       Cats                       Pictures of cats from Tumblr  apiKey   \n","5  Dog Facts                                   Random dog facts           \n","6  Dog Facts                               Random facts of Dogs           \n","7       Dogs                 Based on the Stanford Dogs Dataset           \n","8      eBird  Retrieve recent or notable birding observation...  apiKey   \n","9  FishWatch  Information and pictures about individual fish...           \n","\n","   HTTPS Cors                                               Link Category  \n","4   True   no                        https://docs.thecatapi.com/  Animals  \n","5   True  yes           https://dukengn.github.io/Dog-facts-API/  Animals  \n","6   True  yes                 https://kinduff.github.io/dog-api/  Animals  \n","7   True  yes                           https://dog.ceo/dog-api/  Animals  \n","8   True   no  https://documenter.getpostman.com/view/664302/...  Animals  \n","9   True  yes               https://www.fishwatch.gov/developers  Animals  "],"text/html":["\n","  <div id=\"df-ecb5d493-5e41-411d-b8dc-32c2dcb2499f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>API</th>\n","      <th>Description</th>\n","      <th>Auth</th>\n","      <th>HTTPS</th>\n","      <th>Cors</th>\n","      <th>Link</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>Cats</td>\n","      <td>Pictures of cats from Tumblr</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>no</td>\n","      <td>https://docs.thecatapi.com/</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Dog Facts</td>\n","      <td>Random dog facts</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://dukengn.github.io/Dog-facts-API/</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Dog Facts</td>\n","      <td>Random facts of Dogs</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://kinduff.github.io/dog-api/</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Dogs</td>\n","      <td>Based on the Stanford Dogs Dataset</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://dog.ceo/dog-api/</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>eBird</td>\n","      <td>Retrieve recent or notable birding observation...</td>\n","      <td>apiKey</td>\n","      <td>True</td>\n","      <td>no</td>\n","      <td>https://documenter.getpostman.com/view/664302/...</td>\n","      <td>Animals</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>FishWatch</td>\n","      <td>Information and pictures about individual fish...</td>\n","      <td></td>\n","      <td>True</td>\n","      <td>yes</td>\n","      <td>https://www.fishwatch.gov/developers</td>\n","      <td>Animals</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ecb5d493-5e41-411d-b8dc-32c2dcb2499f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ecb5d493-5e41-411d-b8dc-32c2dcb2499f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ecb5d493-5e41-411d-b8dc-32c2dcb2499f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":[""],"metadata":{"id":"GroYLv5C-57X"},"execution_count":null,"outputs":[]}]}