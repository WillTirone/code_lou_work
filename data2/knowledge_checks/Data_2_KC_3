{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Data_2_KC_3","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOEJ15HeOBAgwZ+Hv/aWzaA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Welcome to Knowledge Check 3! \n","\n","Today we're going to combine some data."],"metadata":{"id":"kHHk8n7acTJ4"}},{"cell_type":"markdown","source":["## Combining Data\n","\n","Data taken from [Louisville Metro Data](https://data.louisvilleky.gov/dataset/parking-citations). This is the same data from Knowledge Check 2, but we're going to pull in a table of codes to try to see what these parking tickets mean. At the bottom of the page, you can see a csv titled ```Violation Codes``` - it's fairly common to see a data set up like this, where you have the codes in one table (or file) and the description of them in another. For exampe, at Humana, we have a table that has CPT Code information, like descriptions of the type of surgery, and then on the claims table we just have the CPT code (this is just a code for what surgery was performed). I routinely have to just join these together and pull the codes and claims from one table and descriptions from another.\n","\n","---\n","\n","1. Make a .py (or .ipynb) file that contains the following (your choice of editor does not matter!) and do the following: \n","- import two sets of data from any source you want. They can be typed by hand like I did below, imported from an API, or any other way.\n","- join them / combine them into one data frame. You can use any kind of join you want, but I find inner joins and left joins are the most common by far. Play around with different types though if you want to see what they do.\n","2. Commit your changes.\n","3. Push your changes to your repo and notify your mentor!"],"metadata":{"id":"y3gZ1qEGbu7H"}},{"cell_type":"code","source":["import pandas as pd "],"metadata":{"id":"MD2k50NGFXmk","executionInfo":{"status":"ok","timestamp":1651861851640,"user_tz":240,"elapsed":457,"user":{"displayName":"Will T","userId":"16947091469695222242"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["## Code Examples\n","\n","For the sake of simplicity, I'm going to type some data in and join the two sets together. The important things to note: \n","- the 'key' I'm joining on is ```country```, and the names are exactly identical. If one had \"USA\" and one had \"United States\", the join wouldn't work. It's usually much easier to join on, say, a number like a Tax ID or a unique identifying number rather than a string for the reasons mentioned above."],"metadata":{"id":"EYAsX3YDHb2R"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"Kz4HaIdwbsCQ"},"outputs":[],"source":["left_table = [\n","    {\"country\" : \"USA\",\n","    \"population\" : 330000000},\n","    {\"country\" : \"Argentina\",\n","     \"population\" : 45800000},\n","     {\"country\" : \"Brazil\",\n","      \"population\" : 212300000}\n","]\n","\n","right_table = [\n","    {\"country\" : \"USA\",\n","    \"GDP\" : 20000000000000},\n","    {\"country\" : \"Argentina\",\n","     \"GDP\" : 383000000000},\n","     {\"country\" : \"Brazil\",\n","      \"GDP\" : 1145000000000}\n","]"]},{"cell_type":"code","source":["pop_df = pd.DataFrame(data=left_table)\n","pop_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"id":"fc1g6Q0hFRpL","executionInfo":{"status":"ok","timestamp":1650930094481,"user_tz":240,"elapsed":154,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"2b7219c3-bae5-45e0-d80a-e414437e832b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     country  population\n","0        USA   330000000\n","1  Argentina    45800000\n","2     Brazil   212300000"],"text/html":["\n","  <div id=\"df-695e0f0c-eba5-4894-9457-f43d82e52fe3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>population</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>USA</td>\n","      <td>330000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Argentina</td>\n","      <td>45800000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Brazil</td>\n","      <td>212300000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-695e0f0c-eba5-4894-9457-f43d82e52fe3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-695e0f0c-eba5-4894-9457-f43d82e52fe3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-695e0f0c-eba5-4894-9457-f43d82e52fe3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["gdp_df = pd.DataFrame(data=right_table)\n","gdp_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"id":"U6yuLCkZFZ8o","executionInfo":{"status":"ok","timestamp":1650930021842,"user_tz":240,"elapsed":156,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"0ffaf2e5-0962-4468-f292-6e8172ceabd8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     country             GDP\n","0        USA  20000000000000\n","1  Argentina    383000000000\n","2     Brazil   1145000000000"],"text/html":["\n","  <div id=\"df-563efb78-68f6-4750-bf2d-e972f603bde7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>GDP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>USA</td>\n","      <td>20000000000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Argentina</td>\n","      <td>383000000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Brazil</td>\n","      <td>1145000000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-563efb78-68f6-4750-bf2d-e972f603bde7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-563efb78-68f6-4750-bf2d-e972f603bde7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-563efb78-68f6-4750-bf2d-e972f603bde7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["Pandas understands that because I'm using the join method of pop_df, that that will be the left table and gdp_df is the right. It tries to match the key automatically based on the names of the columns that are present in both tables. However, you can specify which key from the left table and which from the right you want to join on. There's also an optional ```how``` argument to specify what type of join you want. \n","\n","The docs for DataFrame.merge are [here](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.merge.html).\n","\n","Now we can do a calculation with both columns, hence our desire to combine them."],"metadata":{"id":"l6CupsapIEeG"}},{"cell_type":"code","source":["combined_df = pop_df.merge(gdp_df)\n","combined_df['GDP_per_population'] = combined_df['GDP'] / combined_df['population']\n","combined_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"id":"vA4HU4jDGJ6u","executionInfo":{"status":"ok","timestamp":1650930327714,"user_tz":240,"elapsed":123,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"b2a95b23-e8b1-4a7a-8489-04ddb1d9f40a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     country  population             GDP  GDP_per_population\n","0        USA   330000000  20000000000000        60606.060606\n","1  Argentina    45800000    383000000000         8362.445415\n","2     Brazil   212300000   1145000000000         5393.311352"],"text/html":["\n","  <div id=\"df-96c9742c-b07b-46be-b135-9843cc6633b5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>population</th>\n","      <th>GDP</th>\n","      <th>GDP_per_population</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>USA</td>\n","      <td>330000000</td>\n","      <td>20000000000000</td>\n","      <td>60606.060606</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Argentina</td>\n","      <td>45800000</td>\n","      <td>383000000000</td>\n","      <td>8362.445415</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Brazil</td>\n","      <td>212300000</td>\n","      <td>1145000000000</td>\n","      <td>5393.311352</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96c9742c-b07b-46be-b135-9843cc6633b5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-96c9742c-b07b-46be-b135-9843cc6633b5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-96c9742c-b07b-46be-b135-9843cc6633b5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["Let's try the same process with some real data."],"metadata":{"id":"FvxS7suBJBgg"}},{"cell_type":"code","source":["citations = pd.read_csv('https://raw.githubusercontent.com/WillTirone/code_lou_work/main/Parking%20Citations%202018%20Thru%203-24-18.csv')\n","codes = pd.read_csv('https://raw.githubusercontent.com/WillTirone/code_lou_work/main/Violation%20Codes.csv')"],"metadata":{"id":"BUGLJBqQGgMd","executionInfo":{"status":"ok","timestamp":1651861856582,"user_tz":240,"elapsed":612,"user":{"displayName":"Will T","userId":"16947091469695222242"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["print(citations.columns)\n","print(codes.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gxnqPGWrJP6U","executionInfo":{"status":"ok","timestamp":1651861856582,"user_tz":240,"elapsed":3,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"002d28e3-e661-49d8-832f-f64229f758e6"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Cite Number', 'Issue Date', 'Violat', 'Sublocatio', 'Street',\n","       'Meter #', 'Is Wa', 'Due'],\n","      dtype='object')\n","Index(['Code', 'Description', 'Dollar Fine'], dtype='object')\n"]}]},{"cell_type":"code","source":["citations.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"EownAny9JvYf","executionInfo":{"status":"ok","timestamp":1651861858531,"user_tz":240,"elapsed":132,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"9d9a9c49-24ff-45e6-fded-f7da8e61478b"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Cite Number  Issue Date Violat Sublocatio       Street Meter # Is Wa  Due\n","0  M201507360  02/16/2018    PSW        700      YORK ST     NaN    NO  0.0\n","1  M201306003  01/05/2018     HO       100S       1ST ST     NaN    NO  0.0\n","2  M202705546  01/18/2018      X       N200       1ST ST    3012    NO  0.0\n","3  M202802800  01/10/2018    NPP       500W   LIBERTY ST     NaN    NO  0.0\n","4  M200208507  02/23/2018     NP       200E  CHESTNUT ST     NaN    NO  0.0"],"text/html":["\n","  <div id=\"df-374088dd-7387-48e4-8196-f582ea52f51e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cite Number</th>\n","      <th>Issue Date</th>\n","      <th>Violat</th>\n","      <th>Sublocatio</th>\n","      <th>Street</th>\n","      <th>Meter #</th>\n","      <th>Is Wa</th>\n","      <th>Due</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M201507360</td>\n","      <td>02/16/2018</td>\n","      <td>PSW</td>\n","      <td>700</td>\n","      <td>YORK ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>M201306003</td>\n","      <td>01/05/2018</td>\n","      <td>HO</td>\n","      <td>100S</td>\n","      <td>1ST ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>M202705546</td>\n","      <td>01/18/2018</td>\n","      <td>X</td>\n","      <td>N200</td>\n","      <td>1ST ST</td>\n","      <td>3012</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M202802800</td>\n","      <td>01/10/2018</td>\n","      <td>NPP</td>\n","      <td>500W</td>\n","      <td>LIBERTY ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>M200208507</td>\n","      <td>02/23/2018</td>\n","      <td>NP</td>\n","      <td>200E</td>\n","      <td>CHESTNUT ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-374088dd-7387-48e4-8196-f582ea52f51e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-374088dd-7387-48e4-8196-f582ea52f51e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-374088dd-7387-48e4-8196-f582ea52f51e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["codes.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"wyTzsXd0JxCL","executionInfo":{"status":"ok","timestamp":1650930955017,"user_tz":240,"elapsed":140,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"d0038fd2-321c-410f-b057-065bca366577"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Code                Description  Dollar Fine\n","0    H       72.004 HANDICAP ZONE          100\n","1   RV  72.031 NO PARK RV/TRAILER           15\n","2  NPU     72.031 NO PARK TRAILER           15\n","3    U  72.032 UNATTENDED VEHICLE           15\n","4  PCV    72.033 NO PARK COMM VEH           15"],"text/html":["\n","  <div id=\"df-fad4c1c3-ec2f-44ab-8607-9eb06e680c07\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Code</th>\n","      <th>Description</th>\n","      <th>Dollar Fine</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>H</td>\n","      <td>72.004 HANDICAP ZONE</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>RV</td>\n","      <td>72.031 NO PARK RV/TRAILER</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NPU</td>\n","      <td>72.031 NO PARK TRAILER</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>U</td>\n","      <td>72.032 UNATTENDED VEHICLE</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>PCV</td>\n","      <td>72.033 NO PARK COMM VEH</td>\n","      <td>15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fad4c1c3-ec2f-44ab-8607-9eb06e680c07')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fad4c1c3-ec2f-44ab-8607-9eb06e680c07 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fad4c1c3-ec2f-44ab-8607-9eb06e680c07');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["parking_df = citations.merge(codes,\n","                            how='left',\n","                            left_on='Violat',\n","                            right_on='Code')\n","parking_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"vxfi_T5DJTN1","executionInfo":{"status":"ok","timestamp":1650930928300,"user_tz":240,"elapsed":149,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"ffcf4d3c-6017-4323-e414-44716bf1baab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Cite Number  Issue Date Violat Sublocatio       Street Meter # Is Wa  Due  \\\n","0  M201507360  02/16/2018    PSW        700      YORK ST     NaN    NO  0.0   \n","1  M201306003  01/05/2018     HO       100S       1ST ST     NaN    NO  0.0   \n","2  M202705546  01/18/2018      X       N200       1ST ST    3012    NO  0.0   \n","3  M202802800  01/10/2018    NPP       500W   LIBERTY ST     NaN    NO  0.0   \n","4  M200208507  02/23/2018     NP       200E  CHESTNUT ST     NaN    NO  0.0   \n","\n","  Code                      Description  Dollar Fine  \n","0  PSW        72.035(C)NO PARK SIDEWALK         15.0  \n","1  NaN                              NaN          NaN  \n","2    X           72.083(A)EXPIRED METER         15.0  \n","3  NPP  72.038(B)(7)NO STOP/PEAK PERIOD         15.0  \n","4   NP                72.035 NO PARKING         15.0  "],"text/html":["\n","  <div id=\"df-a74b9f1d-afc9-4911-847e-3624e029a863\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cite Number</th>\n","      <th>Issue Date</th>\n","      <th>Violat</th>\n","      <th>Sublocatio</th>\n","      <th>Street</th>\n","      <th>Meter #</th>\n","      <th>Is Wa</th>\n","      <th>Due</th>\n","      <th>Code</th>\n","      <th>Description</th>\n","      <th>Dollar Fine</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M201507360</td>\n","      <td>02/16/2018</td>\n","      <td>PSW</td>\n","      <td>700</td>\n","      <td>YORK ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>PSW</td>\n","      <td>72.035(C)NO PARK SIDEWALK</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>M201306003</td>\n","      <td>01/05/2018</td>\n","      <td>HO</td>\n","      <td>100S</td>\n","      <td>1ST ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>M202705546</td>\n","      <td>01/18/2018</td>\n","      <td>X</td>\n","      <td>N200</td>\n","      <td>1ST ST</td>\n","      <td>3012</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>X</td>\n","      <td>72.083(A)EXPIRED METER</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M202802800</td>\n","      <td>01/10/2018</td>\n","      <td>NPP</td>\n","      <td>500W</td>\n","      <td>LIBERTY ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>NPP</td>\n","      <td>72.038(B)(7)NO STOP/PEAK PERIOD</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>M200208507</td>\n","      <td>02/23/2018</td>\n","      <td>NP</td>\n","      <td>200E</td>\n","      <td>CHESTNUT ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>NP</td>\n","      <td>72.035 NO PARKING</td>\n","      <td>15.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a74b9f1d-afc9-4911-847e-3624e029a863')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a74b9f1d-afc9-4911-847e-3624e029a863 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a74b9f1d-afc9-4911-847e-3624e029a863');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["Nice! We combined the datasets to find the Description and Dollar Fine for each of the parking violations. Notice how I had to specify that I wanted to use a ```left_on``` and ```right_on``` argument for the join because the columns have different names. We could have renamed them (and like I mentioned last time, the columns of the first set have typos in them) but this is just for illustrations sake.\n","\n","Notice below, though, that some of the Violations don't appear to have an even code mapping. For example, the violation ```HO``` just has a null value in the code column. This indicates that there isn't an equivalent in the code table (for whatever reason) so everything on the right side table is just filled in with nulls. If we used an inner join, that would have removed this row"],"metadata":{"id":"rphokIa4J4Gz"}},{"cell_type":"code","source":["parking_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"EB55SFd7Jsj4","executionInfo":{"status":"ok","timestamp":1650931073802,"user_tz":240,"elapsed":291,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"5581b098-46a2-4bef-b5df-7f8f56744bb8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Cite Number  Issue Date Violat Sublocatio                       Street  \\\n","0      M201507360  02/16/2018    PSW        700                      YORK ST   \n","1      M201306003  01/05/2018     HO       100S                       1ST ST   \n","2      M202705546  01/18/2018      X       N200                       1ST ST   \n","3      M202802800  01/10/2018    NPP       500W                   LIBERTY ST   \n","4      M200208507  02/23/2018     NP       200E                  CHESTNUT ST   \n","...           ...         ...    ...        ...                          ...   \n","20331  M201900192  03/09/2018   OFF2         48  GARAGE - LOUISVILLE GARDENS   \n","20332  M200208453  01/16/2018   OFF3       W600              LOT - CITY HALL   \n","20333  M201610981  03/20/2018   OFF3       800S                    LOT - MUD   \n","20334  M200706429  02/16/2018    NPP       300W                    MARKET ST   \n","20335  M201507728  03/23/2018    NPP        300                  CHESTNUT ST   \n","\n","      Meter # Is Wa    Due Code                      Description  Dollar Fine  \n","0         NaN    NO    0.0  PSW        72.035(C)NO PARK SIDEWALK         15.0  \n","1         NaN    NO    0.0  NaN                              NaN          NaN  \n","2        3012    NO    0.0    X           72.083(A)EXPIRED METER         15.0  \n","3         NaN    NO    0.0  NPP  72.038(B)(7)NO STOP/PEAK PERIOD         15.0  \n","4         NaN    NO    0.0   NP                72.035 NO PARKING         15.0  \n","...       ...   ...    ...  ...                              ...          ...  \n","20331     NaN    NO  135.0  NaN                              NaN          NaN  \n","20332     NaN    NO    0.0  NaN                              NaN          NaN  \n","20333     NaN    NO   15.0  NaN                              NaN          NaN  \n","20334     NaN    NO    0.0  NPP  72.038(B)(7)NO STOP/PEAK PERIOD         15.0  \n","20335     NaN    NO   15.0  NPP  72.038(B)(7)NO STOP/PEAK PERIOD         15.0  \n","\n","[20336 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-42260665-3628-4a58-aaa4-326f713fc46f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cite Number</th>\n","      <th>Issue Date</th>\n","      <th>Violat</th>\n","      <th>Sublocatio</th>\n","      <th>Street</th>\n","      <th>Meter #</th>\n","      <th>Is Wa</th>\n","      <th>Due</th>\n","      <th>Code</th>\n","      <th>Description</th>\n","      <th>Dollar Fine</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M201507360</td>\n","      <td>02/16/2018</td>\n","      <td>PSW</td>\n","      <td>700</td>\n","      <td>YORK ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>PSW</td>\n","      <td>72.035(C)NO PARK SIDEWALK</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>M201306003</td>\n","      <td>01/05/2018</td>\n","      <td>HO</td>\n","      <td>100S</td>\n","      <td>1ST ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>M202705546</td>\n","      <td>01/18/2018</td>\n","      <td>X</td>\n","      <td>N200</td>\n","      <td>1ST ST</td>\n","      <td>3012</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>X</td>\n","      <td>72.083(A)EXPIRED METER</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M202802800</td>\n","      <td>01/10/2018</td>\n","      <td>NPP</td>\n","      <td>500W</td>\n","      <td>LIBERTY ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>NPP</td>\n","      <td>72.038(B)(7)NO STOP/PEAK PERIOD</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>M200208507</td>\n","      <td>02/23/2018</td>\n","      <td>NP</td>\n","      <td>200E</td>\n","      <td>CHESTNUT ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>NP</td>\n","      <td>72.035 NO PARKING</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20331</th>\n","      <td>M201900192</td>\n","      <td>03/09/2018</td>\n","      <td>OFF2</td>\n","      <td>48</td>\n","      <td>GARAGE - LOUISVILLE GARDENS</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>135.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20332</th>\n","      <td>M200208453</td>\n","      <td>01/16/2018</td>\n","      <td>OFF3</td>\n","      <td>W600</td>\n","      <td>LOT - CITY HALL</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20333</th>\n","      <td>M201610981</td>\n","      <td>03/20/2018</td>\n","      <td>OFF3</td>\n","      <td>800S</td>\n","      <td>LOT - MUD</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>15.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20334</th>\n","      <td>M200706429</td>\n","      <td>02/16/2018</td>\n","      <td>NPP</td>\n","      <td>300W</td>\n","      <td>MARKET ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>0.0</td>\n","      <td>NPP</td>\n","      <td>72.038(B)(7)NO STOP/PEAK PERIOD</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>20335</th>\n","      <td>M201507728</td>\n","      <td>03/23/2018</td>\n","      <td>NPP</td>\n","      <td>300</td>\n","      <td>CHESTNUT ST</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>15.0</td>\n","      <td>NPP</td>\n","      <td>72.038(B)(7)NO STOP/PEAK PERIOD</td>\n","      <td>15.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20336 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42260665-3628-4a58-aaa4-326f713fc46f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-42260665-3628-4a58-aaa4-326f713fc46f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-42260665-3628-4a58-aaa4-326f713fc46f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["parking_df['Excess Fine'] = parking_df['Dollar Fine'] - parking_df['Due']"],"metadata":{"id":"266N9URjKQDB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Now we can use this new data set. Since we have the fines from the code list, we can compare that to the ```Due``` column. If ```Due``` is greater than ```Dollar Fine``` that might indicate the customer was charged too much for the fine.\n","\n","More likely, though, there's a late charge for not paying the fine in time, the fine table is inaccurate, or there's a surcharge because they've received several fines in the same time period. In any case, we have more questions! \n","\n","Here's the SQL equivalent of that join: \n","\n","\n","\n","```SQL\n","SELECT\n","  a.*,\n","  b.*\n","FROM citations a \n","LEFT JOIN codes b \n","ON a.Violat = b.Code\n","```\n","\n"],"metadata":{"id":"TGGBo9aCK1sB"}},{"cell_type":"code","source":["parking_df[parking_df['Excess Fine'] < 0].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"kYd3iy8gKYwV","executionInfo":{"status":"ok","timestamp":1650931222180,"user_tz":240,"elapsed":137,"user":{"displayName":"Will T","userId":"16947091469695222242"}},"outputId":"f0279127-61bd-48bd-997a-178bc179b0c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Cite Number  Issue Date Violat Sublocatio             Street Meter # Is Wa  \\\n","7   M201608912  01/02/2018      X       600W         LIBERTY ST     697    NO   \n","9   M200706259  02/01/2018      X       700W            MAIN ST     305    NO   \n","11  M200208520  02/23/2018      X       500S           FLOYD ST  FL521B    NO   \n","12  M200610593  02/23/2018    NPP        400  MUHAMMAD ALI BLVD     NaN    NO   \n","16  M201610531  03/06/2018      X       600S           BROOK ST    1141    NO   \n","\n","     Due Code                      Description  Dollar Fine  Excess Fine  \n","7   50.0    X           72.083(A)EXPIRED METER         15.0        -35.0  \n","9   50.0    X           72.083(A)EXPIRED METER         15.0        -35.0  \n","11  50.0    X           72.083(A)EXPIRED METER         15.0        -35.0  \n","12  50.0  NPP  72.038(B)(7)NO STOP/PEAK PERIOD         15.0        -35.0  \n","16  50.0    X           72.083(A)EXPIRED METER         15.0        -35.0  "],"text/html":["\n","  <div id=\"df-aa9c128b-c4b7-48a9-9ed5-000a48446f17\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cite Number</th>\n","      <th>Issue Date</th>\n","      <th>Violat</th>\n","      <th>Sublocatio</th>\n","      <th>Street</th>\n","      <th>Meter #</th>\n","      <th>Is Wa</th>\n","      <th>Due</th>\n","      <th>Code</th>\n","      <th>Description</th>\n","      <th>Dollar Fine</th>\n","      <th>Excess Fine</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7</th>\n","      <td>M201608912</td>\n","      <td>01/02/2018</td>\n","      <td>X</td>\n","      <td>600W</td>\n","      <td>LIBERTY ST</td>\n","      <td>697</td>\n","      <td>NO</td>\n","      <td>50.0</td>\n","      <td>X</td>\n","      <td>72.083(A)EXPIRED METER</td>\n","      <td>15.0</td>\n","      <td>-35.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>M200706259</td>\n","      <td>02/01/2018</td>\n","      <td>X</td>\n","      <td>700W</td>\n","      <td>MAIN ST</td>\n","      <td>305</td>\n","      <td>NO</td>\n","      <td>50.0</td>\n","      <td>X</td>\n","      <td>72.083(A)EXPIRED METER</td>\n","      <td>15.0</td>\n","      <td>-35.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>M200208520</td>\n","      <td>02/23/2018</td>\n","      <td>X</td>\n","      <td>500S</td>\n","      <td>FLOYD ST</td>\n","      <td>FL521B</td>\n","      <td>NO</td>\n","      <td>50.0</td>\n","      <td>X</td>\n","      <td>72.083(A)EXPIRED METER</td>\n","      <td>15.0</td>\n","      <td>-35.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>M200610593</td>\n","      <td>02/23/2018</td>\n","      <td>NPP</td>\n","      <td>400</td>\n","      <td>MUHAMMAD ALI BLVD</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","      <td>50.0</td>\n","      <td>NPP</td>\n","      <td>72.038(B)(7)NO STOP/PEAK PERIOD</td>\n","      <td>15.0</td>\n","      <td>-35.0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>M201610531</td>\n","      <td>03/06/2018</td>\n","      <td>X</td>\n","      <td>600S</td>\n","      <td>BROOK ST</td>\n","      <td>1141</td>\n","      <td>NO</td>\n","      <td>50.0</td>\n","      <td>X</td>\n","      <td>72.083(A)EXPIRED METER</td>\n","      <td>15.0</td>\n","      <td>-35.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa9c128b-c4b7-48a9-9ed5-000a48446f17')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aa9c128b-c4b7-48a9-9ed5-000a48446f17 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aa9c128b-c4b7-48a9-9ed5-000a48446f17');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":[""],"metadata":{"id":"jt4XFr-cKcjw"},"execution_count":null,"outputs":[]}]}